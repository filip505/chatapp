{"version":3,"sources":["../src/index.js"],"names":["config","type","host","port","username","password","database","synchronize","logging","migrations","cli","entities","EntitySchema","User","Token","server","Promise","resolve","reject","connection","app","use","bodyParser","json","authMiddleware","http","createServer","listen","console","log","process","env","NODE_ENV","fixtures"],"mappings":";;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS;AACbC,QAAM,UADO;AAEbC,QAAM,WAFO;AAGbC,QAAM,IAHO;AAIbC,YAAU,MAJG;AAKbC,YAAU,MALG;AAMbC,YAAU,MANG;AAObC,eAAa,KAPA;AAQbC,WAAS,IARI;AASbC,cAAY,CAAC,kBAAD,CATC;AAUbC,OAAK;AACH,qBAAiB;AADd,GAVQ;AAabC,YAAU,CACR,IAAIC,qBAAJ,CAAiBC,YAAjB,CADQ,EAER,IAAID,qBAAJ,CAAiBE,aAAjB,CAFQ;AAbG,CAAf;;AAmBO,IAAMC,0BAAS,IAAIC,OAAJ;AAAA,qEAAY,iBAAgBC,OAAhB,EAAyBC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACP,+BAAiBlB,MAAjB,CADO;;AAAA;AAC1BmB,sBAD0B;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEIC,eAf4B,GAetB,wBAfsB;;AAgBhCA,gBAAIC,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAH,gBAAIC,GAAJ,CAAQG,cAAR;AACA,8BAAKJ,GAAL;AACA;;AAEAA,kBAAMK,eAAKC,YAAL,CAAkBN,GAAlB,CAAN;AArBgC;AAAA,mBAsB1BA,IAAIO,MAAJ,CAAW,IAAX,CAtB0B;;AAAA;;AAwBhCC,oBAAQC,GAAR,CAAY,6BAAZ;AACAD,oBAAQC,GAAR,CAAY,6BAAZ;AACAD,oBAAQC,GAAR,CAAY,gBAAgBC,QAAQC,GAAR,CAAYC,QAAxC;;AAEA;AACAf,oBAAQ;AACNG,sBADM;AAEND,oCAFM;AAGNc;AAHM,aAAR;;AA7BgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAZ;;AAAA;AAAA;AAAA;AAAA,IAAf","file":"index.js","sourcesContent":["\nimport polyfil from 'babel-polyfill'\nimport express from 'express'\nimport bodyParser from 'body-parser'\nimport http from 'http'\nimport { EntitySchema, createConnection } from 'typeorm'\n\nimport authMiddleware from './middleware/auth'\nimport { User, Token } from './models'\nimport fixtures from './fixtures'\nimport { auth } from './routes'\n\nconst config = {\n  type: \"postgres\",\n  host: \"localhost\",\n  port: 5432,\n  username: \"node\",\n  password: \"node\",\n  database: \"node\",\n  synchronize: false,\n  logging: true,\n  migrations: [\"./migration/*.js\"],\n  cli: {\n    \"migrationsDir\": \"migration\"\n  },\n  entities: [\n    new EntitySchema(User),\n    new EntitySchema(Token)\n  ]\n}\n\nexport const server = new Promise(async function (resolve, reject) {\n  const connection = await createConnection(config)\n  // const fixtures = require('fixtures')(connection)\n  // if (process.env.NODE_ENV === 'dev') {\n  //   await connection.runMigrations()\n  //   for (let i = 0; i < config.entities.length; i++) {\n  //     const item = config.entities[i].options.name\n  //     await connection.query('delete from ' + item)\n  //   }\n  //   await fixtures.init()\n  // }\n  // else {\n  //   await connection.runMigrations()\n  // }\n\n  let app = express()\n  app.use(bodyParser.json())\n  app.use(authMiddleware)\n  auth(app)\n  //user(app)\n\n  app = http.createServer(app)\n  await app.listen(5001)\n\n  console.log('___________________________')\n  console.log('server started at port 5001')\n  console.log('server env ' + process.env.NODE_ENV)\n\n  // send back closing function\n  resolve({\n    app,\n    connection,\n    fixtures\n  })\n})"]}