{"version":3,"sources":["../src/main/app.js"],"names":["app","use","get","req","res","send"],"mappings":";;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,GAAG,GAAG,uBAAV;AACAA,GAAG,CAACC,GAAJ,CAAQ,oBAAR;AACAD,GAAG,CAACE,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAY;AAC1BA,EAAAA,GAAG,CAACC,IAAJ,CAAS,MAAT;AACD,CAFD,E,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import '@babel/polyfill'\nimport cors from 'cors'\nimport express from 'express'\n\nlet app = express()\napp.use(cors())\napp.get('ping', (req, res)=>{\n  res.send('pong')\n})\n// import { createConnection, } from 'typeorm'\n// import { User, Token, Message, Conversation, Subject } from './models'\n// //eb deploy Mynode-env\n// //eb init -p docker mynode\n// const config = {\n//   type: \"postgres\",\n//   host: \"localhost\",\n//   port: 5432,\n//   username: \"node\",\n//   password: \"testing2019\",\n//   database: \"node\",\n//   synchronize: false,\n//   logging: true,\n//   migrations: [\"./migration/*.js\"],\n//   cli: {\n//     \"migrationsDir\": \"migration\"\n//   },\n//   entities: [\n//     User,\n//     Conversation,\n//     Subject,\n//     Token,\n//     Message\n//   ]\n// }\n\n// let connection\n\n// createConnection(config).then(async function(newConnection){\n//   connection = newConnection\n//   await require('./server').default(5001)\n// }, function(error){\n//   console.log('error', error)\n// })\n\n// export default connection\n\n"],"file":"app.js"}