{"version":3,"sources":["../src/main/app.js"],"names":["express","require","app","port","get","req","res","send","JSON","stringify","env","listen","console","log"],"mappings":";;AAAA;;AACA;;;;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;AACA,IAAMG,IAAI,GAAG,IAAb;AAEAD,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeC,YAAf,CAAT,CAAd;AAAA,CAAjB;AAEAR,GAAG,CAACS,MAAJ,CAAWR,IAAX,EAAiB;AAAA,SAAMS,OAAO,CAACC,GAAR,yCAA6CV,IAA7C,OAAN;AAAA,CAAjB,E,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import '@babel/polyfill'\nimport env from './env'\nconst express = require('express')\nconst app = express()\nconst port = 5001\n\napp.get('/ping', (req, res) => res.send(JSON.stringify(env)))\n\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))\n// import { createConnection, } from 'typeorm'\n// import { User, Token, Message, Conversation, Subject } from './models'\n// //eb deploy Mynode-env\n// //eb init -p docker mynode\n// const config = {\n//   type: \"postgres\",\n//   host: \"localhost\",\n//   port: 5432,\n//   username: \"node\",\n//   password: \"testing2019\",\n//   database: \"node\",\n//   synchronize: false,\n//   logging: true,\n//   migrations: [\"./migration/*.js\"],\n//   cli: {\n//     \"migrationsDir\": \"migration\"\n//   },\n//   entities: [\n//     User,\n//     Conversation,\n//     Subject,\n//     Token,\n//     Message\n//   ]\n// }\n\n// let connection\n\n// createConnection(config).then(async function(newConnection){\n//   connection = newConnection\n//   await require('./server').default(5001)\n// }, function(error){\n//   console.log('error', error)\n// })\n\n// export default connection\n\n"],"file":"app.js"}