{"version":3,"sources":["../../src/main/routes/message.controller.js"],"names":["router","post","req","res","user","body","conversationId","number","text","messageService","createMessage","message","socket","sendMessage","catch","oneSignalService","sendNotification","send","get","params","getMessages","messages"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAG,sBAAf;AAEAA,MAAM,CAACC,IAAP,CAAY,EAAZ,EAAgB,iCAAgB,MAAhB,CAAhB,EAAyC;AACvC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAa,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,YAAAA,IADG,GACYF,GADZ,CACHE,IADG,EACGC,IADH,GACYH,GADZ,CACGG,IADH;AAEHC,YAAAA,cAFG,GAE8BD,IAF9B,CAEHC,cAFG,EAEaC,MAFb,GAE8BF,IAF9B,CAEaE,MAFb,EAEqBC,IAFrB,GAE8BH,IAF9B,CAEqBG,IAFrB;AAAA;AAAA,mBAGWC,iBAAeC,aAAf,CAA6BJ,cAA7B,EAA6CC,MAA7C,EAAqDC,IAArD,EAA2DJ,IAA3D,CAHX;;AAAA;AAGLO,YAAAA,OAHK;;AAIXC,4BAAOC,WAAP,CAAmBF,OAAnB,EAA4BG,KAA5B,CAAkC;AAAA,qBAAMC,mBAAiBC,gBAAjB,CAAkCL,OAAlC,EAA2CP,IAA3C,CAAN;AAAA,aAAlC;;AACAD,YAAAA,GAAG,CAACc,IAAJ,CAASN,OAAT;;AALW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,IADF;AAUAX,MAAM,CAACkB,GAAP,CAAW,+BAAX,EAA4C,iCAAgB,MAAhB,CAA5C,EACE;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAa,kBAAOhB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,IADK,GACEF,GAAG,CAACE,IADN;AAELE,YAAAA,cAFK,GAEYJ,GAAG,CAACiB,MAAJ,CAAWb,cAFvB;AAAA;AAAA,mBAGYG,iBAAeW,WAAf,CAA2Bd,cAA3B,EAA2CF,IAA3C,CAHZ;;AAAA;AAGLiB,YAAAA,QAHK;AAIXlB,YAAAA,GAAG,CAACc,IAAJ,CAASI,QAAT;;AAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA,IADF;eASerB,M","sourcesContent":["import { oauthMiddleware } from './../middleware'\nimport { errorHandler } from './../util'\nimport { dtoValidatorMiddleware as validate } from '../middleware'\nimport { Router } from 'express'\nimport createMessageShema from '../dto/createMessage'\nimport messageService from '../services/message.service'\nimport socket from '../socket'\nimport oneSignalService from './../services/one.signal.service'\n\nconst router = Router()\n\nrouter.post('', oauthMiddleware('user'), //validate(createMessageShema),\n  errorHandler(async (req, res) => {\n    const { user, body } = req\n    const { conversationId, number, text } = body\n    const message = await messageService.createMessage(conversationId, number, text, user);\n    socket.sendMessage(message).catch(() => oneSignalService.sendNotification(message, user))\n    res.send(message)\n  })\n)\n\nrouter.get('/conversation/:conversationId', oauthMiddleware('user'),\n  errorHandler(async (req, res) => {\n    const user = req.user\n    const conversationId = req.params.conversationId\n    const messages = await messageService.getMessages(conversationId, user)\n    res.send(messages)\n  })\n)\n\nexport default router"],"file":"message.controller.js"}